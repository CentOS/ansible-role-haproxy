---
# tasks file for haproxy

- name: Installing haproxy
  yum:
    name: "{{ haproxy_pkg }}"
    state: latest
  notify: restart_haproxy  

- import_tasks: logging.yml
  when: haproxy_local_log
  tags:
    - log

- name: Ensuring that we have a pkistore for haproxy
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ haproxy_tls_staging_dir }}"
    - "{{ haproxy_tls_dir }}"
  tags:
    - tls

- name: Importing haproxy-pem-tool
  template:
    src: haproxy-pem-tool.j2
    dest: /usr/libexec/centos/haproxy-pem-tool
    mode: 0750
  tags:
    - tls

- block:
    - name: Distributing TLS certs
      copy: 
        src: "{{ pkistore }}/{{ item.public_name }}.crt"
        dest: "{{ haproxy_tls_staging_dir }}"
      with_items: "{{ haproxy_vhosts }}"
      notify: restart_haproxy
      register: tls_certs
      loop_control:
        label: '{{ item.public_name }}'
      tags:
        - tls

    - name: Distributing TLS CA chain crt
      copy: 
        src: "{{ pkistore }}/{{ item.public_name }}-CAChain.crt"
        dest: "{{ haproxy_tls_staging_dir }}"
      with_items: "{{ haproxy_vhosts }}"
      loop_control:
        label: '{{ item.public_name }}'
      tags:
        - tls

    - name: Distributing TLS keys
      copy: 
        src: "{{ pkistore }}/{{ item.public_name }}.key"
        dest: "{{ haproxy_tls_staging_dir }}"
      with_items: "{{ haproxy_vhosts }}"
      loop_control:
        label: '{{ item.public_name }}'
      tags:
        - tls

    - name: Producing the .pem for haproxy
      command: /usr/libexec/centos/haproxy-pem-tool
      when: tls_certs is changed
      tags:
        - tls
  when: "'revproxy' in haproxy_type" 

- name: Opening up httpd rule
  include_role:
    name: iptables
    tasks_from: custom-policy
  vars:
    iptables_policy_name: haproxy-http
    iptables_protocol: tcp
    iptables_port: "80"
    iptables_source: "0.0.0.0/0"
  tags:
    - iptables
  when: haproxy_public

- name: Opening up https rule
  include_role:
    name: iptables
    tasks_from: custom-policy
  vars:
    iptables_policy_name: haproxy-https
    iptables_protocol: tcp
    iptables_port: "443"
    iptables_source: "0.0.0.0/0"
  tags:
    - iptables
  when: haproxy_public

- name: Configure haproxy
  template:
    src: haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
    validate: '/usr/sbin/haproxy -c -f %s'  
  notify: restart_haproxy
  tags:
    - config

- name: Ensuring that haproxy can balance tcp ports
  seboolean:
    name: haproxy_connect_any
    state: True
    persistent: yes
  when: "'ocp' in haproxy_type"
  tags:
    - selinux

- name: Enabling service
  service:
    name: haproxy
    state: started
    enabled: True

- block:
    - name: Configuring agent in Zabbix server
      include_role:
        name: zabbix-server
        tasks_from: agent_config
      vars:
        zabbix_templates: "{{ zabbix_haproxy_templates }}"
        zabbix_groups: "{{ zabbix_haproxy_groups }}"
  delegate_to: "{{ zabbix_api_srv }}"  
  tags:
    - monitoring
